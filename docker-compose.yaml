services:
  dominos-service:
    build:
      context: .
      args:
        - APP_ENVIRONMENT=development
    container_name: dominos-service-local
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/home/node/app
      - /home/node/app/node_modules
    command: ["npm", "run", "dev"]

  postgres:
    image: postgres
    container_name: postgres-local
    restart: always
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./data/db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 5s
      retries: 5
      timeout: 5s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-local
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${MESSAGE_BROKER_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${MESSAGE_BROKER_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 5s
      retries: 5
      timeout: 5s
volumes:
  postgres-data:
